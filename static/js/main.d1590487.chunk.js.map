{"version":3,"sources":["components/Modal/ModalContent.module.css","components/ModalWithHooks/ModalContent.module.css","serviceWorker.js","hooks/useWindowEvent.js","components/Modal/ModalContent.js","components/Modal/index.js","components/Modal/ModalContainer.js","hooks/useModal.js","components/ModalWithHooks/ModalContent.js","components/SamplePopup.js","components/SamplePopupHooks.js","App.js","components/ModalWithHooks/withModal.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","useWindowEvent","event","callback","useEffect","addEventListener","removeEventListener","ModalContent","forwardRef","ref","children","title","closeModal","onCancel","onOk","isOpened","isLoading","isClosing","createPortal","className","styles","modal","role","aria-labelledby","aria-modal","tabIndex","data-opened","data-closing","modal__content","modal__content__close","type","onClick","aria-label","xmlns","width","height","viewBox","d","modal__content__header","id","modal__content__body","modal__content__footer","disabled","modal__backdrop","document","getElementById","Modal","trigger","content","useState","setIsOpened","setIsLoading","setIsClosing","modalRef","useRef","current","setTimeout","restoreScrolling","body","style","overflow","a","console","log","useCallback","target","contains","keyCode","key","useModal","inititalOpen","lockIn","beforeOpen","beforeClose","afterOpen","afterClose","openModal","SamplePopup","ModalWithHooks","Trigger","Promise","resolve","withModal","props","App","open","close","SamplePopupHooks","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d1590487.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ModalContent_modal__34qkw\",\"modal__content\":\"ModalContent_modal__content__1ZEZG\",\"scale-up\":\"ModalContent_scale-up__1IoNS\",\"scale-down\":\"ModalContent_scale-down__1oZwy\",\"modal__content__close\":\"ModalContent_modal__content__close__1A-lA\",\"close-icon\":\"ModalContent_close-icon__3qzFi\",\"modal__content__header\":\"ModalContent_modal__content__header__2uc-z\",\"modal__content__body\":\"ModalContent_modal__content__body__1mDVW\",\"modal__content__footer\":\"ModalContent_modal__content__footer__3sfGH\",\"modal__backdrop\":\"ModalContent_modal__backdrop__dVnii\",\"fade-in\":\"ModalContent_fade-in__6YFNc\",\"fade-out\":\"ModalContent_fade-out__2leKn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ModalContent_modal__3v-cD\",\"modal__content\":\"ModalContent_modal__content__34uUf\",\"scale-up\":\"ModalContent_scale-up__yGpHB\",\"scale-down\":\"ModalContent_scale-down__v5qr7\",\"modal__content__close\":\"ModalContent_modal__content__close__OQ7lt\",\"close-icon\":\"ModalContent_close-icon__3Gd2m\",\"modal__content__header\":\"ModalContent_modal__content__header__1bjW5\",\"modal__content__body\":\"ModalContent_modal__content__body__1W1MF\",\"modal__content__footer\":\"ModalContent_modal__content__footer__23bYT\",\"modal__backdrop\":\"ModalContent_modal__backdrop__2HniV\",\"fade-in\":\"ModalContent_fade-in__2wInm\",\"fade-out\":\"ModalContent_fade-out__3Op8p\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { useEffect } from \"react\";\n\nexport const useWindowEvent = (event, callback) => {\n  useEffect(() => {\n    window.addEventListener(event, callback);\n\n    return () => {\n      window.removeEventListener(event, callback);\n    }\n  }, [event, callback]);\n};\n","import React, { forwardRef } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport styles from \"./ModalContent.module.css\";\n\nconst ModalContent = forwardRef(\n  ({\n    children,\n    title,\n    closeModal,\n    onCancel,\n    onOk,\n    isOpened,\n    isLoading,\n    isClosing\n  }, ref) => (\n  createPortal(\n    <div\n      className={styles.modal}\n      role=\"dialog\"\n      aria-labelledby=\"modal-label\"\n      aria-modal=\"true\"\n      tabIndex=\"-1\"\n      data-opened={isOpened}\n      data-closing={isClosing}\n    >\n      <div\n        className={styles.modal__content}\n        ref={ref}\n        role=\"document\"\n      >\n        <button\n          className={styles.modal__content__close}\n          type=\"button\"\n          onClick={closeModal}\n          title=\"Close\"\n          aria-label=\"Close\"\n        >\n          <span\n            className={styles[\"close-icon\"]}\n            role=\"img\"\n            aria-label=\"Close\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"18\"\n              height=\"18\"\n              viewBox=\"0 0 18 18\"\n            >\n              <path\n                d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"\n              />\n            </svg>\n          </span>\n        </button>\n        <div\n          className={styles.modal__content__header}\n        >\n          <div\n            id=\"modal-label\"\n          >\n            {title}\n          </div>\n        </div>\n        <div\n          className={styles.modal__content__body}\n        >\n          {children}\n        </div>\n        <div\n          className={styles.modal__content__footer}\n        >\n          <button\n            type=\"button\"\n            onClick={onCancel}\n            className=\"button button--cancel\"\n            disabled={isLoading}\n          >\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            onClick={onOk}\n            className=\"button button--ok\"\n            disabled={isLoading}\n          >\n            OK\n          </button>\n        </div>\n      </div>\n      <div\n        className={styles.modal__backdrop}\n      />\n    </div>,\n    document.getElementById(\"modal-root\")\n  )\n));\n\nexport default ModalContent;\n","import Modal from './ModalContainer';\n\nexport default Modal;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\n\nimport { useWindowEvent } from \"hooks/useWindowEvent\";\n\nimport ModalContent from './ModalContent';\n\nconst ModalContainer = ({\n  trigger,\n  content,\n  title = \"\",\n  onCancel = () => {},\n  onOk = () => {}\n}) => {\n  const [isOpened, setIsOpened] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isClosing, setIsClosing] = useState(false);\n  const modalRef = useRef();\n\n  function closeModal() {\n    if (modalRef.current) {\n      setIsClosing(true);\n      // Wait for the animation to finish\n      setTimeout(() => {\n        setIsOpened(false);\n        setIsClosing(false);\n      }, 501);\n    }\n  }\n\n  function openModal() {\n    setIsOpened(true);\n  }\n\n  function lockScrolling() {\n    document.body.style.overflow = \"hidden\";\n  }\n\n  function restoreScrolling() {\n    document.body.style.overflow = \"unset\";\n  }\n\n  async function handleCancel() {\n    setIsLoading(true);\n\n    try {\n      await onCancel();\n      closeModal();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  async function handleOk() {\n    setIsLoading(true);\n\n    try {\n      await onOk();\n      closeModal();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  // Handle outside clicks\n  useWindowEvent(\"mousedown\", useCallback(({ target }) => {\n    if (modalRef.current && modalRef.current.contains(target)) {\n      return;\n    }\n\n    closeModal();\n  }, []));\n\n  // Handle ESC presses\n  useWindowEvent(\"keydown\", useCallback(({ keyCode, key }) => {\n    if (keyCode === 27 || key === \"Escape\" || key === \"Esc\") {\n      closeModal();\n    }\n  }, []));\n\n  useEffect(() => {\n    if (isOpened) {\n      lockScrolling()\n    } else {\n      restoreScrolling();\n    }\n\n    return () => {\n      restoreScrolling();\n    };\n  }, [isOpened]);\n\n  return (\n    <>\n      {trigger(openModal)}\n      {isOpened && (\n        <ModalContent\n          ref={modalRef}\n          title={title}\n          closeModal={closeModal}\n          onCancel={handleCancel}\n          onOk={handleOk}\n          isOpened={isOpened}\n          isLoading={isLoading}\n          isClosing={isClosing}\n        >\n          {content(closeModal)}\n        </ModalContent>\n      )}\n    </>\n  );\n};\n\nexport default ModalContainer;\n","import { useRef, useState, useCallback, useEffect } from \"react\";\nimport { useWindowEvent } from \"hooks/useWindowEvent\";\n\nexport const useModal = ({\n  inititalOpen = false,\n  lockIn = false,\n  beforeOpen = () => {},\n  beforeClose = () => {},\n  afterOpen = () => {},\n  afterClose = () => {}\n}) => {\n  const modalRef = useRef(null);\n  const [isOpened, setIsOpened] = useState(inititalOpen);\n\n  const openModal = useCallback(async() => {\n    try {\n      await beforeOpen();\n      setIsOpened(true);\n      await afterOpen();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [beforeOpen, afterOpen]);\n\n  const closeModal = useCallback(async() => {\n    try {\n      await beforeClose();\n      setIsOpened(false);\n      await afterClose();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [beforeClose, afterClose]);\n\n  function lockScrolling() {\n    document.body.style.overflow = \"hidden\";\n  }\n\n  function restoreScrolling() {\n    document.body.style.overflow = \"unset\";\n  }\n\n  // Handle outside clicks\n  useWindowEvent(\"mousedown\", useCallback(({ target }) => {\n    if (!isOpened) {\n      return;\n    }\n\n    if (lockIn === true) {\n      return;\n    }\n\n    if (modalRef.current && modalRef.current.contains(target)) {\n      return;\n    }\n\n    closeModal();\n  }, [lockIn, modalRef, closeModal, isOpened]));\n\n  // Handle ESC presses\n  useWindowEvent(\"keydown\", useCallback(({ keyCode, key }) => {\n    if (!isOpened) {\n      return;\n    }\n\n    if (lockIn === true) {\n      return;\n    }\n\n    if (keyCode === 27 || key === \"Escape\" || key === \"Esc\") {\n      closeModal();\n    }\n  }, [lockIn, closeModal, isOpened]));\n\n  useEffect(() => {\n    if (isOpened) {\n      lockScrolling()\n    } else {\n      restoreScrolling();\n    }\n\n    return () => {\n      restoreScrolling();\n    };\n  }, [isOpened]);\n\n  return {\n    modalRef,\n    isOpened,\n    openModal,\n    closeModal\n  }\n}\n","import React, { forwardRef } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport styles from \"./ModalContent.module.css\";\n\nconst ModalContent = forwardRef(\n  ({\n    children,\n    title,\n    openModal,\n    closeModal,\n    onCancel,\n    onOk,\n    isOpened,\n    isLoading,\n    isClosing\n  }, ref) => (\n  createPortal(\n    <div\n      className={styles.modal}\n      role=\"dialog\"\n      aria-labelledby=\"modal-label\"\n      aria-modal=\"true\"\n      tabIndex=\"-1\"\n      data-opened={isOpened}\n      data-closing={isClosing}\n    >\n      <div\n        className={styles.modal__content}\n        ref={ref}\n        role=\"document\"\n      >\n        <button\n          className={styles.modal__content__close}\n          type=\"button\"\n          onClick={closeModal}\n          title=\"Close\"\n          aria-label=\"Close\"\n        >\n          <span\n            className={styles[\"close-icon\"]}\n            role=\"img\"\n            aria-label=\"Close\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"18\"\n              height=\"18\"\n              viewBox=\"0 0 18 18\"\n            >\n              <path\n                d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"\n              />\n            </svg>\n          </span>\n        </button>\n        <div\n          className={styles.modal__content__header}\n        >\n          <div\n            id=\"modal-label\"\n          >\n            {title}\n          </div>\n        </div>\n        <div\n          className={styles.modal__content__body}\n        >\n          {children}\n        </div>\n        <div\n          className={styles.modal__content__footer}\n        >\n          <button\n            type=\"button\"\n            onClick={onCancel}\n            className=\"button button--cancel\"\n            disabled={isLoading}\n          >\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            onClick={onOk}\n            className=\"button button--ok\"\n            disabled={isLoading}\n          >\n            OK\n          </button>\n        </div>\n      </div>\n      <div\n        className={styles.modal__backdrop}\n      />\n    </div>,\n    document.getElementById(\"modal-root\")\n  )\n));\n\nexport default ModalContent;\n","import React from \"react\";\n\nconst SamplePopup = () => {\n  return (\n    <div>\n      <p>\n        Hello, if you click on the <strong>Ok</strong> button, it will trigger an asynchronous event for 3 seconds. This is only to show that it can handle asynchronous events (useful for form submitting or similar cases).\n      </p>\n      <p>\n        If you click on the <strong>(X)</strong> button or <strong>Cancel</strong> button, the modal will be closed immediately.\n      </p>\n      <p>\n        It can also be closed by <strong>clicking outside</strong> the content or by <strong>pressing ESC</strong> \n      </p>\n    </div>\n  );\n};\n\nexport default SamplePopup;\n","import React from \"react\";\n\nconst SamplePopup = () => {\n  return (\n    <div>\n      <b>Custom Hooks and HOC implementation.</b>\n      <p>\n        Hello, if you click on the <strong>Ok</strong> button, it will trigger an asynchronous event for 3 seconds. This is only to show that it can handle asynchronous events (useful for form submitting or similar cases).\n      </p>\n      <p>\n        If you click on the <strong>(X)</strong> button or <strong>Cancel</strong> button, the modal will be closed immediately.\n      </p>\n      <p>\n        It <strong>cannot</strong> be closed by <strong>clicking outside</strong> the content or by <strong>pressing ESC</strong> \n      </p>\n    </div>\n  );\n};\n\nexport default SamplePopup;\n","import React from \"react\";\n\nimport Modal from \"components/Modal/\";\nimport withModal from \"components/ModalWithHooks/withModal\";\nimport SamplePopup from \"components/SamplePopup\";\nimport SamplePopupHooks from \"components/SamplePopupHooks\";\n\nconst Trigger = (props) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"button\"\n      {...props}\n    >\n      Open modal #2\n    </button>\n  )\n}\n\nconst ModalWithHooks = withModal(Trigger);\n\nfunction App() {\n  async function onOk() {\n    console.log(\"Please wait...\");\n\n    await new Promise(resolve => {\n      setTimeout(resolve, 3000);\n    });\n    console.log(\"OK, done!\");\n  }\n\n  function onCancel() {\n    console.log(\"Canceled!\");\n  }\n\n  return (\n    <>\n      <h1>\n        React Modal Assessment\n      </h1>\n      <div>\n        <Modal\n          title=\"Simple ReactJS Modal\"\n          trigger={open => {\n            return (\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={open}\n              >\n                Open modal\n              </button>\n            )}\n          }\n          onCancel={onCancel}\n          onOk={onOk}\n          content={close => (\n            <SamplePopup />\n          )}\n        />\n        <ModalWithHooks\n          title=\"Simple ReactJS Modal With Hooks\"\n          onCancel={onCancel}\n          onOk={onOk}\n          lockIn={true}\n        >\n          <SamplePopupHooks />\n        </ModalWithHooks>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React, { useState } from \"react\";\nimport { useModal } from \"hooks/useModal\";\nimport ModalContent from \"./ModalContent\";\n\nconst withModal = (Trigger) => {\n  const ModalContainer = ({\n    children,\n    inititalOpen,\n    lockIn,\n    title = \"\",\n    onOk = () => {},\n    onCancel = () => {}\n  }) => {\n    const {\n      modalRef,\n      isOpened,\n      openModal,\n      closeModal\n    } = useModal({\n      inititalOpen,\n      lockIn,\n      beforeClose: async () => {\n        await new Promise(resolve => {\n          setIsClosing(true);\n          setTimeout(resolve, 501);\n        });\n      },\n      afterClose: () => {\n        setIsClosing(false);\n      }\n    });\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [isClosing, setIsClosing] = useState(false);\n  \n    async function handleCancel() {\n      setIsLoading(true);\n  \n      try {\n        await onCancel();\n        closeModal();\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  \n    async function handleOk() {\n      setIsLoading(true);\n  \n      try {\n        await onOk();\n        closeModal();\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  \n    return (\n      <>\n        <Trigger onClick={openModal} />\n        {isOpened && (\n          <ModalContent\n            ref={modalRef}\n            title={title}\n            isOpened={isOpened}\n            closeModal={closeModal}\n            openModal={openModal}\n            isLoading={isLoading}\n            isClosing={isClosing}\n            onCancel={handleCancel}\n            onOk={handleOk}\n          >\n            {children}\n          </ModalContent>\n        )}\n      </>\n    );\n  }\n\n  return ModalContainer;\n}\n\nexport default withModal;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport App from \"./App\";\n\nimport \"assets/styles/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}